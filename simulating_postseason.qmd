---
title: "College Football Postseason Predictions"
subtitle: "Bowl Game and Playoff Simulations"
editor: source
format:
  html:
    html-table-processing: none
    message: false
    echo: false
    warning: false
    number-sections: false
params:
    season: 2024
    week: 16
---

```{r}
#| include: false

library(targets)
library(dplyr)
library(tidymodels)
library(gt)
library(cowplot)
library(furrr)
library(purrr)

# set plan
plan(multisession, workers = 6)

# src
targets::tar_source("R")

```

```{r}
#| label: targets

# load in objects
team_estimates = tar_read("season_team_estimates")
team_scores = tar_read("team_scores")
games_model = tar_read("games_model")
model = games_model |> extract_fit_engine()

# regular season predictions
regular_season_predictions = tar_read("games_sims") |>
  filter(season_type == 'regular')

# get most recent team estimates
current_estimates = 
  team_estimates |>
  slice_estimates()

```

```{r}
#| label: cfbd calls
# retrieve up to date games and betting lines
# get game info
game_info <-
  load_games(year = params$season, season_type = 'postseason')

# # get betting lines
# betting_lines <-
#   load_betting_lines(year = params$season)

```

```{r}
#| label: game predictions
#| messgae: false
#| warning: false

postseason_games = 
  game_info |>
  prepare_games_for_model(estimates = team_estimates, 
                          season_week = paste(params$season, params$week, sep = "_")) |>
  filter(season_type == 'postseason')

playoff_ids = 
  game_info |>
  filter(grepl("College Football Playoff", notes)) |>
  select(game_id)

playoff_games = 
  postseason_games |>
  inner_join(
    playoff_ids
  )

bowl_games = 
  postseason_games |>
  anti_join(
    playoff_ids
  )

playoff_sims =
  games_model |>
  simulate_games(
    newdata = playoff_games
  )

bowl_sims = 
  games_model |>
  simulate_games(
    newdata = bowl_games
  )

bowl_predictions = 
  bowl_sims |>
  summarize_simulations()

playoff_predictions = 
  playoff_sims |>
  summarize_simulations()

game_predictions =
  bind_rows(regular_season_predictions,
            bowl_predictions, 
            playoff_predictions) |>
  add_game_info(game_info = game_info) |>
  add_team_scores(teams_data = team_scores,
                  current_season = params$season,
                  current_week = params$week) |>
  prepare_game_predictions() |>
  arrange(desc(game_interest))

postseason_predictions = 
  game_predictions |>
  filter(season_type == 'postseason')

game_predictions_and_betting_lines =
  game_predictions |>
  join_betting_lines(betting_lines)

```

```{r}
#| label: set playoff teams and get their ratings
#| message: false
#| warning: false
playoff_teams = 
  c('Oregon', 
    'Georgia', 
    'Boise State', 
    'Arizona State', 
    'Texas', 
    'Penn State', 
    'Notre Dame', 
    'Ohio State', 
    'Tennessee', 
    'Indiana', 
    'SMU', 
    'Clemson')

current_estimates = 
  team_estimates |>
  slice_estimates()

playoff_ratings = 
  team_scores |>
  inner_join(
    tibble(team = playoff_teams)
  ) |>
  add_season_week() |>
  filter(season == max(season)) |>
  filter(week == max(week)) |>
  arrange(desc(score)) |>
  select(season, team, score, offense, defense, special)

```

# CFB Playoff

::: {.callout-note collapse="true"}

## About the Table

The following table displays the results from simulating the college football playoff using my game prediction model.

**Team Ratings** refer to the team's estimated efficiency on offense and defense in terms of expected points added per play, adjusted for opponent quality.

**Win Probabilities** refer to the proportion of simulations in which the team won their matchup in each round. 

:::

```{r}
#| label: run simulations
#| warning: false
#| message: false

# number of sims
n = 20000

playoff_sims = 
  future_map(
    1:n,
    ~ simulate_playoff(
      playoff_teams,
      estimates = current_estimates,
      model = model
    ) |>
      mutate(.draw = .x),
    .options=furrr_options(seed = TRUE)
  ) |>
  list_rbind()

```

```{r}
#| message: false
#| warning: false
#| fig-width: 10
#| column: page

playoff_sims |>
  gt_playoff_probs(
    ratings = playoff_ratings
  ) |>
  gt::tab_header("2024 College Football Playoff Simulations",
                 subtitle = paste("Results based on 2p0,000 simulations from team efficiency model"))
```


<!-- ## Matchups -->

<!-- What are the most likely matchups in each round? -->

<!-- ```{r} -->

<!-- playoff_sims |> -->
<!--   filter(round == 'championship') |> -->
<!--   plot_matchups() -->
<!-- ``` -->


<!-- ```{r} -->
<!-- #| fig-height: 9 -->
<!-- #| fig-width: 10 -->
<!-- playoff_sims |> -->
<!--   summarize_wins_by_team() |> -->
<!--   plot_bracket() -->

<!-- ``` -->


<!-- ```{r} -->
<!-- #| class: scroll -->

<!-- playoff_sims |> -->
<!--   nest(data = -.draw) |> -->
<!--   sample_n(1) |> -->
<!--   unnest(data) |> -->
<!--   mutate( -->
<!--     result = case_when(winner == home_team ~ paste(home_team, "by", .prediction), -->
<!--                        winner == away_team ~ paste(away_team, "by", -.prediction)) -->
<!--   ) |> -->
<!--   select(.draw, round, home_team, away_team, winner, result) |> -->
<!--   group_by(.draw = paste("sim:", .draw)) |> -->
<!--   gt::gt() |> -->
<!--   gtExtras::gt_theme_espn() |> -->
<!--   add_gt_formatting() |> -->
<!--   gt::cols_hide(columns = c("winner")) |> -->
<!--   gt::cols_align(columns = c("result"), align = c("center")) |> -->
<!--   gt::cols_label( -->
<!--     home_team ~ "Home", -->
<!--     away_team ~ "Away", -->
<!--   ) |> -->
<!--   gt::tab_style( -->
<!--     style = cell_text(weight = "bold"), -->
<!--     locations = cells_body( -->
<!--       columns = c("home_team"), -->
<!--       rows = home_team == winner -->
<!--     ) -->
<!--   ) |> -->
<!--   gt::tab_style( -->
<!--     style = cell_text(weight = "bold"), -->
<!--     locations = cells_body( -->
<!--       columns = c("away_team"), -->
<!--       rows = away_team == winner -->
<!--     ) -->
<!--   ) -->

<!-- ``` -->


# Game Predictions

::: {.callout-note collapse="false"}

## About the Table

**Quality** indicates the quality of the teams involved in the game. This is the (harmonic) mean of the two teamâ€™s power ratings and is scaled to range from 0 to 100, with 100 indicating a game between highly rated opponents.

**Interest** indicates how interesting a game is expected to be based on the quality of the teams and how competitive the game is expected to be. I assign every game a competitive rating using a quadratic formula applied to Pr(HomeWin), which I use along with Quality in a weighted average to produce the Interest score. This ranges from 0 to 100, where 100 indicates a very competitive game between two highly rated opponents.

**Pr(HomeWin)** is the percentage of times that the home team won the game across every simulation.

**Prediction** is the average margin of victory for the winning team across all simulations.

:::

```{r}
#| label: playoff games table
#| column: body-outset-right

postseason_predictions |>
  left_join(
    playoff_games |>
      mutate(playoff = T) |>
      select(game_id, playoff),
    by = c("game_id")
  ) |>
  arrange(playoff) |>
  game_predictions_tbl() |>
  add_gt_formatting() |>
  gt::cols_hide(columns = 'playoff') |>
  gt::tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = playoff == T
    )
  )

```
