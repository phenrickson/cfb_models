---
title: "College Football Postseason Predictions"
subtitle: "Bowl Game and Playoff Simulations"
editor: source
format:
  html:
    html-table-processing: none
    message: false
    echo: false
    warning: false
    number-sections: false
params:
    season: 2024
    week: 16
---

```{r}
#| include: false

library(targets)
library(dplyr)
library(tidymodels)
library(gt)
library(cowplot)
library(furrr)
library(purrr)

# # set plan
# plan(multisession, workers = 6)

# src
targets::tar_source("R")

theme_set(theme_cfb() + theme(panel.grid.major = element_blank()))

```

```{r}
#| label: targets

# load in objects
team_estimates = tar_read("season_team_estimates")
team_scores = tar_read("team_scores")
games_model = tar_read("games_model")
model = games_model |> extract_fit_engine()

# active estimates
tar_load(current_team_estimates)

# regular season predictions
regular_season_predictions = 
  tar_read("games_sims") |>
  filter(season_type == 'regular')

# game predictions
game_sims = tar_read("games_sims")

# playoff teams
tar_load(playoff_teams)

# playoff sims
tar_load(playoff_sims)

```

```{r}
#| label: cfbd calls
# retrieve up to date games and betting lines
# get game info
game_info <-
  load_games(year = params$season, season_type = 'both')

playoff_games = 
  game_info |>
  filter(grepl("College Football Playoff", notes))

# # get betting lines
# betting_lines <-
#   load_betting_lines(year = params$season)

```

```{r}
#| label: game predictions
#| messgae: false
#| warning: false

# get game predictions
game_predictions =
  game_sims |>
  add_game_info(game_info = game_info) |>
  add_team_scores(teams_data = team_scores,
                  current_season = params$season,
                  current_week = params$week) |>
  prepare_game_predictions() |>
  arrange(desc(game_interest))

postseason_predictions = 
  game_predictions |>
  filter(season_type == 'postseason')

```

```{r}
#| label: set playoff teams and get their ratings
#| message: false
#| warning: false

# table of playoff team ratings
playoff_ratings = 
  team_scores |>
  inner_join(
    tibble(team = playoff_teams)
  ) |>
  add_season_week() |>
  filter(season == max(season)) |>
  filter(week == max(week)) |>
  arrange(desc(score)) |>
  select(season, team, score, offense, defense, special)

```

# Playoff Simulations

The following predictions come from a game prediction model I trained on historical college football games. The inputs into the game prediction model are team level measures of offensive/defensive/special teams efficiency, which I estimate from play by play data. I simulate each game thousands of times in order to estimate the home team's win probability and expected margin of victory (or defeat).

::: {.callout-note collapse="false"}

## About the Table

**Team Ratings** refer to the team's estimated efficiency on offense and defense in terms of expected points added per play, adjusted for opponent quality.

**Win Probabilities** refer to the proportion of simulations in which the team won their matchup in each round. 

:::

```{r}
#| message: false
#| warning: false
#| fig-width: 10
#| column: page

playoff_sims |>
  gt_playoff_probs(
    ratings = playoff_ratings
  ) |>
  gt::tab_header("2024 College Football Playoff Simulations",
                 subtitle = paste("Results based on 10,000 simulations from team efficiency model"))
```


<!-- ## Bracket -->

<!-- ```{r} -->
<!-- #| fig-width: 10 -->
<!-- #| column: body-outset-right -->
<!-- playoff_sims |> -->
<!--   summarize_wins_by_team() |> -->
<!--   plot_bracket() -->

<!-- ``` -->

## Matchups

What are the most likely matchups in the playoff?

::: {.panel-tabset .nav-pills}

### Quarterfinal

```{r}
#| fig-width: 10
#| fig-height: 8

playoff_sims |>
  filter(round == 'quarterfinal') |>
  plot_matchups()
  #facet_wrap(paste("quarterfinal") ~.)

```

### Semi-Finals

```{r}
#| fig-width: 10
#| fig-height: 8

playoff_sims |>
  filter(round == 'semifinal') |>
  plot_matchups()

```

### Championship

```{r}
#| fig-width: 10
#| fig-height: 8

playoff_sims |>
  filter(round == 'championship') |>
  plot_matchups() +
  facet_wrap(paste("championship") ~ .)+
  theme(axis.text.y = element_text(size = 8))
  #facet_wrap(paste("quarterfinal") ~.)

```

:::

<!-- ## Matchups -->

<!-- What are the most likely matchups in each round? -->

<!-- ```{r} -->

<!-- playoff_sims |> -->
<!--   filter(round == 'championship') |> -->
<!--   plot_matchups() -->
<!-- ``` -->


<!-- ```{r} -->
<!-- #| fig-height: 8 -->
<!-- #| fig-width: 10 -->
<!-- playoff_sims |> -->
<!--   summarize_wins_by_team() |> -->
<!--   plot_bracket() -->

<!-- ``` -->


<!-- ```{r} -->
<!-- #| class: scroll -->

<!-- playoff_sims |> -->
<!--   nest(data = -.draw) |> -->
<!--   sample_n(1) |> -->
<!--   unnest(data) |> -->
<!--   mutate( -->
<!--     result = case_when(winner == home_team ~ paste(home_team, "by", .prediction), -->
<!--                        winner == away_team ~ paste(away_team, "by", -.prediction)) -->
<!--   ) |> -->
<!--   select(.draw, round, home_team, away_team, winner, result) |> -->
<!--   group_by(.draw = paste("sim:", .draw)) |> -->
<!--   gt::gt() |> -->
<!--   gtExtras::gt_theme_espn() |> -->
<!--   add_gt_formatting() |> -->
<!--   gt::cols_hide(columns = c("winner")) |> -->
<!--   gt::cols_align(columns = c("result"), align = c("center")) |> -->
<!--   gt::cols_label( -->
<!--     home_team ~ "Home", -->
<!--     away_team ~ "Away", -->
<!--   ) |> -->
<!--   gt::tab_style( -->
<!--     style = cell_text(weight = "bold"), -->
<!--     locations = cells_body( -->
<!--       columns = c("home_team"), -->
<!--       rows = home_team == winner -->
<!--     ) -->
<!--   ) |> -->
<!--   gt::tab_style( -->
<!--     style = cell_text(weight = "bold"), -->
<!--     locations = cells_body( -->
<!--       columns = c("away_team"), -->
<!--       rows = away_team == winner -->
<!--     ) -->
<!--   ) -->

<!-- ``` -->


# Game Predictions

::: {.callout-note collapse="false"}

## About the Table

**Quality** indicates the quality of the teams involved in the game. This is the (harmonic) mean of the two teamâ€™s power ratings and is scaled to range from 0 to 100, with 100 indicating a game between highly rated opponents.

**Interest** indicates how interesting a game is expected to be based on the quality of the teams and how competitive the game is expected to be. I assign every game a competitive rating using a quadratic formula applied to Pr(HomeWin), which I use along with Quality in a weighted average to produce the Interest score. This ranges from 0 to 100, where 100 indicates a very competitive game between two highly rated opponents.

**Pr(HomeWin)** is the percentage of times that the home team won the game across every simulation.

**Prediction** is the average margin of victory for the winning team across all simulations.

:::

```{r}
#| label: playoff games table
#| column: body-outset-right

postseason_predictions |>
  left_join(
    playoff_games |>
      mutate(playoff = T) |>
      select(game_id, playoff),
    by = c("game_id")
  ) |>
  arrange(playoff) |>
  game_predictions_tbl() |>
  add_gt_formatting() |>
  gt::cols_hide(columns = 'playoff') |>
  gt::tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      columns = everything(),
      rows = playoff == T
    )
  )

```
